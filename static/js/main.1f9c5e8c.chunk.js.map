{"version":3,"sources":["serviceWorker.ts","pages/About/About.tsx","components/TopBar/TopBar.tsx","router/AppRouter.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","About","className","href","TopBar","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","AppRouter","path","component","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4OAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCoDSC,EApES,WACtB,OACE,yBAAKC,UAAU,kBACb,uDACA,mDACA,kLAIA,2CACA,mFAIA,6CACA,4JAIA,gDACA,wFAIA,oEACA,6OAKA,gDACA,iPAIA,6CACA,2dAOA,8CACA,4RAIA,0CACA,8vBAKA,yCACA,ydAQA,4EAAiD,uBAAGC,KAAK,wCAAR,uBC1CxCC,EApBU,WACvB,OACE,yBAAKF,UAAU,+CACb,kBAAC,IAAD,CAAMA,UAAU,eAAeG,GAAG,KAAlC,WAEA,4BAAQH,UAAU,iBAAiBI,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpL,0BAAMT,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BU,GAAG,0BAC3C,wBAAIV,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWG,GAAG,WAA9B,SAA8C,0BAAMH,UAAU,WAAhB,mBCA3CW,EAVa,WAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWX,IAC3B,kBAAC,IAAD,CAAOU,KAAK,IAAIE,OAAK,EAACD,UAAWd,IACjC,kBAAC,IAAD,CAAOa,KAAK,UAAUC,UAAWd,MCJvCgB,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,SJmIjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.1f9c5e8c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst About: React.FC = () => {\n  return (\n    <div className=\"container mt-5\">\n      <h1>Things I’m good at</h1>\n      <h2>1. Assisting people</h2>\n      <p>\n        Whenever someone comes to me requesting help it’s like turning some switch on in my mind that fuels my motivation to solve whatever they need.\n      </p>\n\n      <h2>2. Learning</h2>\n      <p>\n        Learning new things was always an easy thing for me.\n      </p>\n\n      <h2>3. Discussing</h2>\n      <p>\n        People around me usually have big moments discussing things with me because they know good conclusions will come out of this.\n      </p>\n\n      <h2>4. Investigating</h2>\n      <p>\n        Life plays good mysteries on us and I like to solve them.\n      </p>\n\n      <h2>5. Creating and enhancing strategies</h2>\n      <p>\n        Competitive games were always my thing.\n        Football back on school days, my colleagues use to say I was the best. Card games, video games, and any E-sports games I’ve played I was a challenging adversary.\n      </p>\n\n      <h2>6. Collaboration</h2>\n      <p>\n        I believe a single person can achieve good results but I know for sure that a team can achieve extraordinary results. Whenever I see I can contribute with anything to help a team member succeed I’ll do it.\n      </p>\n\n      <h2>7. Commitment</h2>\n      <p>\n        I can’t even count how many times I’ve done things that ordinary people would never do. When I engage in doing something I’ll go hard on it…\n        Waking up at 4:30 AM to take my girlfriend (wife now) at her place so we could go run by the lake together.\n        Waking up at 3:00 AM to play an event in an online game.\n        Waking up at 5:00 AM to attend a meeting at Work when I was dismissed of it, so I could just skip it without a problem\n      </p>\n\n      <h2>8. Programming</h2>\n      <p>\n        It’s a natural thing to me, create scripts, think about how data comes in and how it should get out, don’t give up on failures, be able to change the mindset when I can’t move, I know all of this is hard to a lot of people but easy to me.\n      </p>\n\n      <h2>9. Finance</h2>\n      <p>\n        I’ve always been financially well. Since I was a Kid I remember I could raise money to whatever I wanted, and I never got it free from anyone. I had to work for it. Wash the dishes, wash my father’s car then buying a box of gums and selling them to colleagues at school by a higher price is an example of how I used to do in order to raise money.\n        Then later when I started the real work, to have a job, I knew I had to save a good part of my salary in order to make more money later, make investments, and buy expensive stuff like my own house. Nowadays, I own shares of several companies in the Stock Market, have government bonds, and started to talk with successful Angel investors to learn from them on how to become one.\n      </p>\n\n      <h2>10. Music</h2>\n      <p>\n        A passion I have, I like any kind of music, that sometimes makes people annoyed because usually they expect someone to have a real preference and proudly say something like \"I like Rock N' Roll\" or \"I like classical Music\".\n        \n        I, Ramon, like music, even if it's just someone playing with a car horn, if it has rythm and a melody I'll like it.\n\n        Also it worth to mention that I've studied music too, I play Guitar and Piano, and I Sing as well.\n      </p>\n\n      <p>Do you want to see my Resume? Please visit my <a href=\"https://www.linkedin.com/in/ramonpm/\">Linkedin profile</a></p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst TopBar: React.FC = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">RamonPM</Link>\n\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/about/\">About <span className=\"sr-only\">(current)</span></Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default TopBar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport About from \"../pages/About/About\";\nimport TopBar from \"../components/TopBar/TopBar\";\n\nconst AppRouter: React.FC = () => {\n  return (\n    <Router>\n      <Route path=\"/\" component={TopBar} />\n      <Route path=\"/\" exact component={About} />\n      <Route path=\"/about/\" component={About} />\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter from './router/AppRouter';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}